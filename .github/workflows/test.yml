name: Test aw-watcher-virtualdesktop

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      activitywatch:
        image: activitywatch/activitywatch:latest
        ports:
          - 5600:5600
        env:
          AW_TESTING: true
        options: >-
          --health-cmd "curl -f http://localhost:5600/api/0/info || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 30s

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl

    - name: Update lock file if needed
      run: poetry lock --no-update

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Wait for ActivityWatch to be ready
      run: |
        echo "Waiting for ActivityWatch server to be ready..."
        timeout 60 bash -c 'until curl -f http://localhost:5600/api/0/info; do sleep 2; done'
        echo "ActivityWatch server is ready!"

    - name: Run virtual desktop tests
      run: |
        poetry run python -c "
        import sys
        try:
            from aw_watcher_window.virtualdesktop import get_virtual_desktop_info
            info = get_virtual_desktop_info()
            print('Virtual desktop info:', info)
            assert 'desktop' in info, 'desktop key missing from info'
            print('✓ Virtual desktop detection works')
        except ImportError as e:
            print(f'Import error: {e}')
            sys.exit(1)
        except Exception as e:
            print(f'Test failed: {e}')
            sys.exit(1)
        "

    - name: Run integration tests
      run: poetry run python tests/test_integration.py

    - name: Test ActivityWatch connection
      run: |
        poetry run python -c "
        from aw_client import ActivityWatchClient
        import time
        
        client = ActivityWatchClient('test-client', host='localhost', port=5600, testing=True)
        try:
            info = client.get_info()
            print('ActivityWatch server info:', info)
            print('✓ Successfully connected to ActivityWatch server')
        except Exception as e:
            print('✗ Failed to connect:', e)
            raise
        "

    - name: Run watcher simulation test
      run: poetry run python tests/test_watcher_simulation.py